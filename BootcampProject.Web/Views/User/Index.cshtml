@using BootcampProject.Core.DTOs
@model UserActionDto
@{
    Layout = "_Layout";
    ViewData["Title"] = "Users";
    int rowCount = 0;
}


<div class="row mt-5">
    <div class="col-10 offset-1">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Apartment Residents List</h3>

                <div class="card-tools">
                    <div class="input-group input-group-sm" style="width: 150px;">
                        <a class="btn btn-sm btn-success" asp-action="Create" asp-controller="User">
                            <i class="fa-solid fa-user-plus mr-1"></i> Create New User
                        </a>
                    </div>
                </div>
            </div>
            <!-- /.card-header -->
            <div class="card-body table-responsive p-0">
                <table class="table table-hover text-nowrap text-center">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Surname</th>
                            <th>TC Number</th>
                            <th>Email</th>
                            <th>Phone Number</th>
                            <th>Car Plate</th>
                            <th>Registered Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td>@user.Name</td>
                                <td>@user.Surname</td>
                                <td>@user.TCNo</td>
                                <td>@user.Email</td>
                                <td>@user.PhoneNumber</td>
                                <td>@(user.CarPlateNumber != null ? user.CarPlateNumber : "-")</td>
                                <td>@user.CreatedAt.ToShortDateString()</td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-warning" data-toggle="modal" data-target="#edit-modal" onclick="editUser(@(user.Id), @(rowCount))">
                                        <i class="fa-regular fa-pen-to-square"></i>
                                    </button>
                                    <button class="btn btn-sm btn-danger">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                            rowCount++;
                        }
                    </tbody>
                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</div>

<div class="modal fade" id="edit-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit User</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            @*@using (Html.BeginForm("Update", "User", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="modal-body">
                    <p class="text-danger">@TempData["UpdateError"]</p>
                    <input hidden value="" id="userId" />

                    <div class="mb-3">
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.EditUser.Name, new {@class = "form-control", placeholder = "Name", id="Name"})
                        </div>
                        @Html.ValidationMessageFor(x => x.EditUser.Name, null, new {@class = "text-danger mb-1"})
                    </div>

                    <div class="mb-3">
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.EditUser.Surname, new {@class = "form-control", placeholder = "Surname", id="Surname"})
                        </div>
                        @Html.ValidationMessageFor(x => x.EditUser.Surname, null, new {@class = "text-danger mb-1"})
                    </div>

                    <div class="mb-3">
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.EditUser.TCNo, new {@class = "form-control", placeholder = "TC number", maxlength="11", id="TCNumber"})
                        </div>
                        @Html.ValidationMessageFor(x => x.EditUser.TCNo, null, new {@class = "text-danger mb-1"})
                    </div>

                    <div class="mb-3">
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.EditUser.Email, new {@class = "form-control", placeholder = "Email", type="email", id="Email"})
                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span class="fas fa-envelope"></span>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(x => x.EditUser.Email, null, new {@class = "text-danger mb-1"})
                    </div>

                    <div class="mb-3">
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.EditUser.PhoneNumber, new {@class = "form-control", placeholder = "Phone Ex: 555 55 55", maxlength="10", id="PhoneNumber"})
                        </div>
                        @Html.ValidationMessageFor(x => x.EditUser.PhoneNumber, null, new {@class = "text-danger mb-1"})
                    </div>

                    <div class="mb-3">
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.EditUser.CarPlateNumber, new {@class = "form-control", placeholder = "Plate Number ex : 34AZ123", maxlength="8", id="CarPlateNumber"})
                        </div>
                        @Html.ValidationMessageFor(x => x.EditUser.CarPlateNumber, null, new {@class = "text-danger mb-1"})
                    </div>

                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            }*@
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section scripts{

<script src="../../plugins/sweetalert2/sweetalert2.min.js"></script>
<script type="text/javascript">

    function editUser(userIdNumber, rowNumber){
        console.log("clicked!!");
        console.log(userIdNumber + " " + rowNumber);
        $("#userId").value = userId;
    }

    $(document).Toasts('create', {
        class: 'bg-success',
        title: 'Toast Title',
        subtitle: 'Subtitle',
        body: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr.',
        autohide: true,
        showDuration: 3000,
        hideDuration: 3000,
        timeOut : 3000
      })

</script>
}